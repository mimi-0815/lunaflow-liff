<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>LunaFlow 決済</title>
  <script src="https://static.line-scdn.net/liff/edge/2/sdk.js"></script>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Hiragino Sans', sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }
    .container {
      background: white;
      border-radius: 20px;
      padding: 40px 30px;
      max-width: 400px;
      width: 100%;
      box-shadow: 0 10px 40px rgba(0,0,0,0.2);
    }
    h1 {
      font-size: 28px;
      color: #333;
      margin-bottom: 10px;
      text-align: center;
    }
    .subtitle {
      color: #666;
      text-align: center;
      margin-bottom: 30px;
      font-size: 14px;
    }
    .plan-select {
      margin-bottom: 30px;
    }
    .plan-option {
      border: 2px solid #e0e0e0;
      border-radius: 12px;
      padding: 20px;
      margin-bottom: 12px;
      cursor: pointer;
      transition: all 0.3s;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .plan-option:hover {
      border-color: #667eea;
      background: #f8f9ff;
      transform: translateY(-2px);
    }
    .plan-option.selected {
      border-color: #667eea;
      background: #f8f9ff;
      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.2);
    }
    .plan-info {
      flex: 1;
    }
    .plan-name {
      font-weight: bold;
      color: #333;
      margin-bottom: 5px;
      font-size: 16px;
    }
    .plan-price {
      color: #667eea;
      font-size: 24px;
      font-weight: bold;
    }
    .plan-check {
      font-size: 24px;
      opacity: 0;
      transition: opacity 0.3s;
    }
    .plan-option.selected .plan-check {
      opacity: 1;
    }
    .btn {
      width: 100%;
      padding: 16px;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      border-radius: 12px;
      font-size: 16px;
      font-weight: bold;
      cursor: pointer;
      transition: all 0.3s;
      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
    }
    .btn:hover:not(:disabled) {
      transform: translateY(-2px);
      box-shadow: 0 6px 16px rgba(102, 126, 234, 0.4);
    }
    .btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      transform: none;
    }
    .status {
      text-align: center;
      margin-top: 20px;
      color: #666;
      font-size: 14px;
    }
    .error {
      color: #e74c3c;
      background: #fee;
      padding: 12px;
      border-radius: 8px;
      margin-bottom: 20px;
      font-size: 14px;
      text-align: center;
    }
    .loading {
      text-align: center;
      padding: 40px;
    }
    .spinner {
      border: 3px solid #f3f3f3;
      border-top: 3px solid #667eea;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
      margin: 0 auto 20px;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <div class="container">
    <div id="loading" class="loading">
      <div class="spinner"></div>
      <div class="status">初期化中...</div>
    </div>
    
    <div id="main" style="display:none;">
      <h1>🌙 LunaFlow</h1>
      <p class="subtitle">プランを選択して決済に進む</p>
      
      <div id="error" class="error" style="display:none;"></div>
      
      <div class="plan-select">
        <div class="plan-option" data-plan="light">
          <div class="plan-info">
            <div class="plan-name">✨ Light プラン</div>
            <div class="plan-price">¥1,000</div>
          </div>
          <div class="plan-check">✓</div>
        </div>
        <div class="plan-option selected" data-plan="standard">
          <div class="plan-info">
            <div class="plan-name">💫 Standard プラン</div>
            <div class="plan-price">¥3,000</div>
          </div>
          <div class="plan-check">✓</div>
        </div>
        <div class="plan-option" data-plan="premium">
          <div class="plan-info">
            <div class="plan-name">⭐ Premium プラン</div>
            <div class="plan-price">¥5,000</div>
          </div>
          <div class="plan-check">✓</div>
        </div>
      </div>
      
      <button class="btn" id="payBtn">決済ページへ進む</button>
      <div class="status" id="status">準備完了</div>
    </div>
  </div>

  <script>
    // ========== 設定 ==========
    const CONFIG = {
      LIFF_ID: '2008358460-7ZLAoV3K',
      STRIPE_LINKS: {
        light: 'https://buy.stripe.com/test_00wdR90j8fprfVo7pjc7u01',
        standard: 'https://buy.stripe.com/test_5kQ6oHd5U6SV24y9xrc7u00',
        premium: 'https://buy.stripe.com/test_9B6aEXc1Q6SVbF810Vc7u02'
      }
    };
    
    let selectedPlan = 'standard';
    let userProfile = null;
    
    // ========== 初期化 ==========
    window.onload = async function() {
      try {
        // LIFF初期化
        await liff.init({ liffId: CONFIG.LIFF_ID });
        
        // ログイン確認
        if (!liff.isLoggedIn()) {
          liff.login();
          return;
        }
        
        // プロフィール取得
        userProfile = await liff.getProfile();
        
        // UI表示
        document.getElementById('loading').style.display = 'none';
        document.getElementById('main').style.display = 'block';
        
        // プラン選択イベント
        setupPlanSelection();
        
        // 決済ボタンイベント
        setupPaymentButton();
        
      } catch (error) {
        showError('初期化エラー: ' + error.message);
        console.error('LIFF Init Error:', error);
      }
    };
    
    // ========== プラン選択 ==========
    function setupPlanSelection() {
      document.querySelectorAll('.plan-option').forEach(option => {
        option.addEventListener('click', function() {
          document.querySelectorAll('.plan-option').forEach(o => o.classList.remove('selected'));
          this.classList.add('selected');
          selectedPlan = this.getAttribute('data-plan');
        });
      });
    }
    
    // ========== 決済ボタン ==========
    function setupPaymentButton() {
      document.getElementById('payBtn').addEventListener('click', async function() {
        if (!userProfile) {
          showError('ユーザー情報が取得できませんでした');
          return;
        }
        
        this.disabled = true;
        this.textContent = '処理中...';
        document.getElementById('status').textContent = 'Stripeページへ移動中...';
        
        try {
          // URLパラメータから紹介者IDを取得
          const urlParams = new URLSearchParams(window.location.search);
          const ref = urlParams.get('ref');
          let referrerId = '';
          
          if (ref) {
            try {
              referrerId = atob(ref);
            } catch (e) {
              console.error('Ref decode error:', e);
            }
          }
          
          // Stripe決済URLを生成
          const baseUrl = CONFIG.STRIPE_LINKS[selectedPlan];
          const stripeUrl = baseUrl + 
            '?client_reference_id=' + encodeURIComponent(userProfile.userId) +
            '&metadata[plan]=' + encodeURIComponent(selectedPlan) +
            '&metadata[referrer_id]=' + encodeURIComponent(referrerId);
          
          // Stripeページへリダイレクト
          window.location.href = stripeUrl;
          
        } catch (error) {
          showError('エラーが発生しました: ' + error.message);
          this.disabled = false;
          this.textContent = '決済ページへ進む';
          document.getElementById('status').textContent = '準備完了';
        }
      });
    }
    
    // ========== エラー表示 ==========
    function showError(message) {
      const errorDiv = document.getElementById('error');
      errorDiv.textContent = message;
      errorDiv.style.display = 'block';
      document.getElementById('loading').style.display = 'none';
      document.getElementById('main').style.display = 'block';
    }
  </script>
</body>
</html>

